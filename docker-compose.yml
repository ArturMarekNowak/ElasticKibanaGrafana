version: "3.1"
services:
  filebeat:
    labels:
      co.elastic.logs/enabled: false
    user: root
    image: docker.elastic.co/beats/filebeat:7.14.0
    command: filebeat -e -strict.perms=false
    volumes:
      - ./docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  elasticsearch:
    labels:
      co.elastic.logs/enabled: false
    environment:
      - discovery.type=single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health" ]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - 9200:9200

  kibana:
    labels:
      co.elastic.logs/enabled: false
    image: docker.elastic.co/kibana/kibana:7.14.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:5601/api/status" ]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - 5601:5601

  app:
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    image: ${DOCKER_REGISTRY-}webapp
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      kibana:
        condition: service_healthy
    ports:
      - "8080:8080"

  prometheus:
    image: prom/prometheus:v2.40.4
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.3.0
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./docker/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana:/var/lib/grafana

  jaeger:
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
    image: jaegertracing/all-in-one:latest

volumes:
  grafana: